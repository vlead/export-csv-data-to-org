#+TITLE: Exporter Program to convert data form csv to org format
#+AUTHOR: VLEAD
#+DATE: [2015-11-25 Wed]
#+PROPERTY: results output
#+PROPERTY: exports code
#+SETUPFILE: ./org-templates/level-0.org
#+options: ^:nil


* Introduction
  Exporter program exports data from csv format to org format. The
  program is written in python language.

* Requirements
  1. Each test case is a file in a specified format.
  2. All test cases in the excel file are converted to the specified
     format.
  3. A directory is created for each experiment and test cases files
     are placed inside it.

* Design & Implementation
** Input format
#+begin_example
|---------------------+-----------------+-------------------+----------------+------------------+----------------------+-----------------------------------+----------------------+------------+-------------------+-------------------------------------------------+--------------------------------+-------------+------------+-----------+-----------------------|
| *Lab Name*          | *Experiment ID* | *Requirements*    | *Test Step ID* | *Test Case Type* | *Test Description*   | *Test Steps*                      | *Expected Result*    | *Status*   | *Test Case Owner* | *Pre/Post Conditions*                           | *Data/Environment*             | *Dev Owner* | *Reviewed* | *History* | *Additional Comments* |
|---------------------+-----------------+-------------------+----------------+------------------+----------------------+-----------------------------------+----------------------+------------+-------------------+-------------------------------------------------+--------------------------------+-------------+------------+-----------+-----------------------|
| Problem Solving Lab |                 | User friendliness |              1 | Usability        | Experiment should be | While testing observe             | Experiment should be | Inprogress | Nihanth           | 1. Open the url vlabs.ac.in and                 | OS: Windows7, Linux            |             |            |           |                       |
|                     |                 | of the Experiment |                |                  | easily usable        | for easiness to use the           | user friendly        |            |                   | vlabs home page will be displayed.              | Browsers: Firefox,             |             |            |           | Missed out test cases |
|                     |                 |                   |                |                  |                      | features of the experiment        |                      |            |                   | 2. Click on IIIT-Hyderabad and a list           | Chrome                         |             |            |           | on the landing page.  |
|                     |                 |                   |                |                  |                      |                                   |                      |            |                   | of labs will be displayed on the screen         | Bandwidth: 100 Mbps            |             |            |           |                       |
|                     |                 |                   |                |                  |                      | Information to use the experiment |                      |            |                   | 3. Select Problem Solving Lab, a home page      | Hardware Configuration: 8GBRAM |             |            |           |                       |
|                     |                 |                   |                |                  |                      | Navigation Look and Feel Speed    |                      |            |                   | will be displayed and click on List of          | Processor: i5                  |             |            |           |                       |
|                     |                 |                   |                |                  |                      |                                   |                      |            |                   | experiments link, where a list of experiments   |                                |             |            |           |                       |
|                     |                 |                   |                |                  |                      |                                   |                      |            |                   | will be displayed on the screen                 |                                |             |            |           |                       |
|                     |                 |                   |                |                  |                      |                                   |                      |            |                   | 4. Select "Numerical Representation experiment" |                                |             |            |           |                       |
|---------------------+-----------------+-------------------+----------------+------------------+----------------------+-----------------------------------+----------------------+------------+-------------------+-------------------------------------------------+--------------------------------+-------------+------------+-----------+-----------------------|
#+end_example

** Output format
#+begin_example
Author :
Date Created :
Environment : 
Objective :
Pre/Post conditions :
Test Steps :
Expected result :
Reviews/Comments :
#+end_example

** Design 
*** Install xlrd
#+begin_example
pip install xlrd
#+end_example

*** Python Program
**** Import Libraries
#+begin_example
import xlrd
import os
import sys
import re
import time
#+end_example

**** Define global variables to exclude some files
#+begin_example
exclude = set([".git", "README.md", "exp.*", "IIT Bombay", "Amrita"])
combined = "(" + ")|(".join(exclude) + ")"
#+end_example

**** Create Directory
#+begin_example
def make_directory(directory):
    if not os.path.exists(directory):
            os.makedirs(directory)
    return
#+end_example

**** Org Data
#+begin_example
def org_data(row):
    data = {}
    data['author'] = "* Author : " + row[10].value + "\n"
    data['date'] = "* Date: " + time.strftime('%c') + "\n"
    data['environment'] = "* Environment \n" + row[12].value + "\n"
    data['objective'] = "* Objective \n" + row[6].value + "\n"
    data['conditions'] = "* Pre/Post conditions \n" + row[11].value + "\n"
    data['testSteps'] = "* Test Steps \n" + row[7].value + "\n"
    data['result'] = "* Expected result \n" + row[8].value + "\n"
    data['review_comments'] = "* Review comments \n" + row[14].value + "\n"
    return data
#+end_example

**** Write to file
#+begin_example
def write_to_file(filepointer, data):
    filepointer.write(data['author'].encode("utf-8"))
    filepointer.write(data['date'].encode("utf-8"))
    filepointer.write(data['environment'].encode("utf-8"))
    filepointer.write(data['objective'].encode("utf-8"))
    filepointer.write(data['conditions'].encode("utf-8"))
    filepointer.write(data['testSteps'].encode("utf-8"))
    filepointer.write(data['result'].encode("utf-8"))
    filepointer.write(data['review_comments'].encode("utf-8"))
    filepointer.write("\n")
    filepointer.close()
    return
#+end_example

**** Process Experiment
#+begin_example
def process_experiment(experiment, directory):
    totalRows = experiment.nrows
    for row in range(1, totalRows):
        filepath = directory + "/" + experiment.name + "_" + str(row).zfill(2) + "_" +  experiment.row(row)[2].value + ".org"
        filepointer = open(filepath, 'w')
        data =  org_data(experiment.row(row))
        write_to_file(filepointer, data)
    return
#+end_example

**** Open Lab file
#+begin_example
def open_lab_file(path, labName):
    book = xlrd.open_workbook(path)
    number_of_experiments = book.nsheets
    parentDirectory = os.path.dirname(path)
    directory = parentDirectory + "/" + labName
    make_directory(directory)
    parentDirectory = directory

    for expIndex in range(number_of_experiments):
        directory = parentDirectory + "/exp" + str(expIndex+1).zfill(2)
        make_directory(directory)
        experiment = book.sheet_by_index(expIndex)
        process_experiment(experiment, directory)
    return
#+end_example

**** Single File
#+begin_example
def single_file(path):
    basename = os.path.basename(path)
    name, extension = os.path.splitext(basename)
    open_lab_file(path, name)
    return
#+end_example

**** Walk over path
#+begin_example
def walk_over_path(path):
    for root, dirs, files in os.walk(path):
        dirs[:] = [d for d in dirs if not re.match(combined, d)]
        files[:] = [f for f in files if not re.match(combined, f)]
        print "root = ", root; print "dirs = ", dirs; print "files = ", files
        for f in files:
            name, extension = os.path.splitext(f)
            if (extension == '.xlsx'):
                path = root + "/" + f
                print "Path = ", path
                open_lab_file(path, name)
    return
#+end_example

**** Main function
#+begin_example
if __name__ == "__main__":
    if len(sys.argv) < 2:
        print "Please provide the path of the file/directory within quotes in command line!"
    else:
        path = sys.argv[1]
        if os.path.isfile(path):
            single_file(path)
        else:
            walk_over_path(path)

#+end_example

* Test Cases
* Releases
** Release - v1.0
   This release will satisfy all the requirements.
   Release Date :: [2015-11-30 Mon]



